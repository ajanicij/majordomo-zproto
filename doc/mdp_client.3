'\" t
.\"     Title: mdp_client
.\"    Author: [see the "AUTHORS" section]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 05/18/2015
.\"    Manual: Majordomo Manual
.\"    Source: Majordomo 0.1.0
.\"  Language: English
.\"
.TH "MDP_CLIENT" "3" "05/18/2015" "Majordomo 0\&.1\&.0" "Majordomo Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
mdp_client \- Majordomo Client
.SH "SYNOPSIS"
.sp
.nf
//  Create a new mdp_client
//  Connect to server endpoint\&. Succeed if connection is successful\&.
mdp_client_t *
    mdp_client_new (const char *endpoint);

//  Destroy the mdp_client
void
    mdp_client_destroy (mdp_client_t **self_p);

//  Return actor, when caller wants to work with multiple actors and/or
//  input sockets asynchronously\&.
zactor_t *
    mdp_client_actor (mdp_client_t *self);

//  Return message pipe for asynchronous message I/O\&. In the high\-volume case,
//  we send methods and get replies to the actor, in a synchronous manner, and
//  we send/recv high volume message data to a second pipe, the msgpipe\&. In
//  the low\-volume case we can do everything over the actor pipe, if traffic
//  is never ambiguous\&.
zsock_t *
    mdp_client_msgpipe (mdp_client_t *self);

//  Send request to broker\&.
int
    mdp_client_request (mdp_client_t *self, const char *service, zmsg_t **body_p);

//  Return last received status
uint8_t
    mdp_client_status (mdp_client_t *self);

//  Return last received reason
const char *
    mdp_client_reason (mdp_client_t *self);

//  Self test of this class
void
    mdp_client_test (bool verbose);

//  To enable verbose tracing (animation) of mdp_client instances, set
//  this to true\&. This lets you trace from and including construction\&.
extern volatile int
    mdp_client_verbose;
.fi
.SH "DESCRIPTION"
.sp
mdp_client \- Majordomo Client
.sp
Please add @discuss section in \&.\&./src/mdp_client\&.c\&.
.SH "EXAMPLE"
.PP
\fBFrom mdp_client_test method\fR. 
.sp
.if n \{\
.RS 4
.\}
.nf
//  Simple create/destroy test
mdp_client_t *self = mdp_client_new ();
assert (self);
mdp_client_destroy (&self);
.fi
.if n \{\
.RE
.\}
.sp
.SH "AUTHORS"
.sp
The majordomo manual was written by the authors in the AUTHORS file\&.
.SH "RESOURCES"
.sp
Main web site: \m[blue]\fB\%\fR\m[]
.sp
Report bugs to the email <\m[blue]\fBzeromq\-dev@lists\&.zeromq\&.org\fR\m[]\&\s-2\u[1]\d\s+2>
.SH "COPYRIGHT"
.sp
Copyright (c) the Contributors as noted in the AUTHORS file\&. This file is part of CZMQ, the high\-level C binding for 0MQ: http://czmq\&.zeromq\&.org\&. This Source Code Form is subject to the terms of the Mozilla Public License, v\&. 2\&.0\&. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla\&.org/MPL/2\&.0/\&. LICENSE included with the majordomo distribution\&.
.SH "NOTES"
.IP " 1." 4
zeromq-dev@lists.zeromq.org
.RS 4
\%mailto:zeromq-dev@lists.zeromq.org
.RE
